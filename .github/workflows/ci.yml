# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache Node Moudles
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - run: pnpm install
      - run: pnpm sdk lint
      - run: pnpm sdk build
      - run: pnpm build:examples
      - run: docker-compose -f docker/docker-compose-ci.yml up --build -d
      - run: pnpm sdk test:ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./packages/sdk/coverage/lcov.info

      - name: Run benchmark
        run: pnpm sdk benchmark | tee ./packages/sdk/output.txt
      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v1
        with:
          path: ./packages/sdk/cache
          key: ${{ runner.os }}-benchmark
      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        with:
          # What benchmark tool the output.txt came from
          tool: 'benchmarkjs'
          # Where the output from the benchmark tool is stored
          output-file-path: ./packages/sdk/output.txt
          # Where the previous data file is stored
          external-data-json-path: ./packages/sdk/cache/benchmark-data.json
          # Workflow will fail when an alert happens
          fail-on-alert: false
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable comment always
          comment-always: true
          # Save only on the main to compare the benchmarks between PR and base branch
          save-data-file: ${{ github.ref == 'refs/heads/main' }}
